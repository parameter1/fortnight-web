name: Deploy web (production)

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
    - id: tag_version
      run: |
        REF=$(echo $GITHUB_REF | cut -d / -f 3)
        [[ "$GITHUB_REF" =~ ^refs/tags.*$ ]] && VERSION="$REF" || VERSION="${REF}-${GITHUB_SHA::7}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.tag_version.outputs.version }}
      image: 598984531759.dkr.ecr.us-east-2.amazonaws.com/native-x-web:${{ steps.tag_version.outputs.version }}

  notify-start:
    needs: [version]
    uses: parameter1/actions/.github/workflows/notify-start.yml@main
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.version }}

  post-deploy-failure:
    if: failure()
    needs: [notify-start, deploy]
    uses: parameter1/actions/.github/workflows/notify-fail.yml@main
    secrets: inherit
    with:
      slack-thread: ${{ needs.notify-start.outputs.slack-thread }}

  post-deploy-complete:
    if: success()
    needs: [notify-start, deploy]
    uses: parameter1/actions/.github/workflows/notify-complete.yml@main
    secrets: inherit
    with:
      slack-thread: ${{ needs.notify-start.outputs.slack-thread }}

  build:
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        name: Login to ECR
        with:
          registry: 598984531759.dkr.ecr.us-east-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          push: true
          tags: ${{ needs.version.outputs.image }}

  deploy:
    runs-on: ubuntu-latest
    needs: [version, build]
    steps:
      - name: Deploy to Kubernetes
        run: |
          npx @parameter1/rancher2cli dl \
            --wait --namespace native-x \
            basecms-service native-x-web \
            ${{ needs.version.outputs.image }}
        env:
          RANCHER_CLUSTERID: ${{ secrets.RANCHER_CLUSTERID_ADX }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
